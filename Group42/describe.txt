This code is made by Satwik Garg(2022461) and Saurav Haldar(2022464)

Contribution:
             Loader - Satwik and Saurav
             Launcher - Saurav and Satwik


Github link-


Implementation of the code-
1. Firstly, the fib.c compiles to fib
2. Then this fib is send as argument to the Launcher
3. The launch.c file read the fib file then do the necessary check for error(code taken from the website provided by sir: https://wiki.osdev.org/ELF_Tutorial for this error checking part only).
4. After that, fib file is send to loader.c
5. loader.c first read the file then typecast it into Elf32_ehdr* type
6. Then we reach the Phdr header using e_phoff
7. p iterate through the Phdr and find the P_LOAD that contain the entry point address
8. A virtual_mem is allocated using map function
9. Then in virtual_mem, memory is copy with p_offset
10. We subtract the virtual address of p from entry point
11. This difference then get added to virtual_mem
12. This virtual_mem then typecast to _start type
13. Then the result got displayed in the terminal




How to run the code
1. Open terminal
2. Move to Group42 folder
3. Type command "make"
4. Type command "export LD_LIBRARY_PATH=./bin:$LD_LIBRARY_PATH"
5. Type command "./launch ../test/fib"



